<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on nfurudono</title><link>https://naoyafurudono.github.io/posts/</link><description>Recent content in Posts on nfurudono</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 14 Jul 2022 14:02:57 +0900</lastBuildDate><atom:link href="https://naoyafurudono.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Local File Transfer</title><link>https://naoyafurudono.github.io/posts/local-file-transfer/</link><pubDate>Thu, 14 Jul 2022 14:02:57 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/local-file-transfer/</guid><description>近距離でのファイル交換はあまり洗練されていない印象がある。 Apple製品間ではAirdropが使えるし、Windowsにも似たような機能があ</description></item><item><title>REPLと単体テスト</title><link>https://naoyafurudono.github.io/posts/repl-unit/</link><pubDate>Mon, 11 Jul 2022 19:23:21 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/repl-unit/</guid><description>Pythonのことを考えていて、TDDの文脈での単体テストの意義にふと気がついた。 つまり、失敗するテストを先に書いて、それを通るように実装を</description></item><item><title>Syscall</title><link>https://naoyafurudono.github.io/posts/syscall/</link><pubDate>Fri, 08 Jul 2022 18:15:10 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/syscall/</guid><description>systemcallを初めて書いた。 パーミッションの挙動を調べるのがモチベーション。 以下を実行できてほしかったのだが、sudoにそんなファイ</description></item><item><title>Systemd</title><link>https://naoyafurudono.github.io/posts/systemd/</link><pubDate>Fri, 08 Jul 2022 18:13:10 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/systemd/</guid><description>systemdでxremapを追加して、システム起動時に勝手にxremapが走るようにした。 僕の環境: $ lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 22.04 LTS Release: 22.04 Codename: jammy</description></item><item><title>Spotify at Commit</title><link>https://naoyafurudono.github.io/posts/spotify-at-commit/</link><pubDate>Mon, 04 Jul 2022 13:39:57 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/spotify-at-commit/</guid><description>Spotifyの再生が一瞬途切れることがある。 そしてそれがシェルコマンドを叩いたタイミングと重なる。 どんなカラクリなんだろうか。ただの気のせ</description></item><item><title>Shell Commands</title><link>https://naoyafurudono.github.io/posts/shell-commands/</link><pubDate>Mon, 04 Jul 2022 13:31:01 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/shell-commands/</guid><description>パーミッションのことが気になって、シェルコマンドのソースコード（C言語）を読んでいるのだけど、読んでいて楽しい。 rm から読み始めたのだが errorno やコ</description></item><item><title>競技プログラミング</title><link>https://naoyafurudono.github.io/posts/procon/</link><pubDate>Sun, 03 Jul 2022 01:41:50 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/procon/</guid><description>数ヶ月前からときどきAtCoder (my account) のコンテストに参加している。 就活とか関数型ではない言語でのプログラミングを意識して始めた。 今回のABC</description></item><item><title>Phantom Type</title><link>https://naoyafurudono.github.io/posts/phantom-type/</link><pubDate>Wed, 29 Jun 2022 14:01:56 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/phantom-type/</guid><description>Phantom type (幽霊型) をチラッと学んだのでメモ。 きっかけは Gentrification gone too far? affordable 2nd-class values for fun and (co-)effect を読んでいるときに出てきたこと。 静的な型を持つ言語で使うテクニックで</description></item><item><title>コードブロックの表示</title><link>https://naoyafurudono.github.io/posts/blog-code/</link><pubDate>Tue, 28 Jun 2022 19:34:08 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/blog-code/</guid><description>コードブロックの表示が気に入らない。設定をいじって白地にしたい。現状では黒地。 というのは、ブログの背景が白だし、僕が普段白地になれているから</description></item><item><title>Golang の変数キャプチャ</title><link>https://naoyafurudono.github.io/posts/go-learn-memory-motivation/</link><pubDate>Tue, 28 Jun 2022 17:27:34 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/go-learn-memory-motivation/</guid><description>Golangの変数キャプチャを勉強する。 追記: 最初、変数キャプチャではなくメモリモデルを勉強しようとしていた。勉強してみて、求めている概念で</description></item><item><title>JavaScript The Good Partsを読んだ</title><link>https://naoyafurudono.github.io/posts/js-good-parts/</link><pubDate>Mon, 20 Jun 2022 19:55:28 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/js-good-parts/</guid><description>読んだ。きっかけはTypeScriptの関数型言語好き向けの紹介ページで事前知識として要求されていたから。 読んでよかったと思う。しっかりJS</description></item><item><title>趣味</title><link>https://naoyafurudono.github.io/posts/anime/</link><pubDate>Mon, 20 Jun 2022 00:53:27 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/anime/</guid><description>心に残った作品を列挙しておく。 順序に意図は無い。 アニメ 91Days パリピ孔明 spy familyのエンディング（アニメ？） true tears 天元突破グレンラガン マクロスデ</description></item><item><title>Golangでのlog</title><link>https://naoyafurudono.github.io/posts/go-log/</link><pubDate>Sun, 19 Jun 2022 18:30:06 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/go-log/</guid><description>Golangの標準ライブラリにlogがある。いろいろ関数が提供されているが、機能はざっくりいうと「引数で与えたメッセージにタイムスタンプをつ</description></item><item><title>投票所のシステム</title><link>https://naoyafurudono.github.io/posts/vote/</link><pubDate>Sun, 19 Jun 2022 17:54:21 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/vote/</guid><description>選挙に行ってきた。そこで投票用紙を一枚差し出す機械を見て驚いた。 あの機械が何をやっているのかは定かではないが、おそらく正確に１枚だけ投票用紙</description></item><item><title>Go Context</title><link>https://naoyafurudono.github.io/posts/go-context/</link><pubDate>Sat, 18 Jun 2022 17:35:11 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/go-context/</guid><description>Golangで始めてcontextを使った。リポジトリは非公開なのであしからず。 Webスクレイピングツールを作っている。 ランディングページを</description></item><item><title>Disable Ipv6 Ubuntu</title><link>https://naoyafurudono.github.io/posts/disable-ipv6-ubuntu/</link><pubDate>Fri, 17 Jun 2022 19:13:53 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/disable-ipv6-ubuntu/</guid><description>Ubuntuでipv6を無効化する 学内ネットにVPN接続してIEEEの論文を取得しようとしたが、学内からのアクセスだと認識されなかった。 IP</description></item><item><title>Ubuntu22.04でZoomの画面共有がうまくいかなかった件</title><link>https://naoyafurudono.github.io/posts/zoom-ubuntu/</link><pubDate>Wed, 15 Jun 2022 17:36:50 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/zoom-ubuntu/</guid><description>追記: 先日画面共有しようとしたところ、うまく相手に表示されなかった。 Zoomから退出して、Ubuntuにログインし直し、ウィンドウシステムを</description></item><item><title>NeoVimでクリップボードを使う</title><link>https://naoyafurudono.github.io/posts/nvim-clipboard/</link><pubDate>Sun, 12 Jun 2022 11:01:45 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/nvim-clipboard/</guid><description>NeoVimでクリップボードを使う TL;DR; init.vimにset clipboard+=unnamedplusと追記する。 長めの説明 Nvimでは（</description></item><item><title>Begin Rust</title><link>https://naoyafurudono.github.io/posts/begin-rust/</link><pubDate>Sat, 11 Jun 2022 12:12:24 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/begin-rust/</guid><description>Rustを勉強している。やはりライフタイムとか借用のあたりで苦労している。 所有権やライフタイムはわかるのだが、借用の仕組みがイマイチわからな</description></item><item><title>Favicon</title><link>https://naoyafurudono.github.io/posts/favicon/</link><pubDate>Mon, 30 May 2022 03:06:08 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/favicon/</guid><description>ファビコンをつけてみた。 素材はJDENTICONで生成した。 それをもとにfavicon用のファイルをFavicon.ico &amp;amp; App Icon Genera</description></item><item><title>ブログの設定を変えた</title><link>https://naoyafurudono.github.io/posts/2022/blog-theme/</link><pubDate>Mon, 30 May 2022 02:08:10 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/2022/blog-theme/</guid><description>このブログはGitHub Pagesで公開していて、Hugoを用いて生成している。 Hugoの設定をろくに調べずに雑に書いていたのだが、今回少し</description></item><item><title>NeoVimを使い始めた</title><link>https://naoyafurudono.github.io/posts/2022/april/neovim/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://naoyafurudono.github.io/posts/2022/april/neovim/</guid><description>Neo Vimが使っていて楽しい、という話。普段はVSCodeを使っていて、全然移行したわけでもないのだけれど、NVimは文字入力に対する反応が比</description></item><item><title>構文エディタ実装の考え</title><link>https://naoyafurudono.github.io/posts/2022/april/syntacticalz-editor/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://naoyafurudono.github.io/posts/2022/april/syntacticalz-editor/</guid><description>構文エディタとは、文字単位だけでなく抽象構文木単位での編集ができるエディタのこと。 一般のコードでなく、プログラムを編集することは抽象構文木の</description></item><item><title>読書感想: 入門 コンピュータ科学</title><link>https://naoyafurudono.github.io/posts/2022/march/intro-cs/</link><pubDate>Sat, 26 Mar 2022 11:12:44 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/2022/march/intro-cs/</guid><description>本をざっくり読んだので感想をメモ。読んでよかった。 読んだ本: 入門 コンピュータ科学。 感想 おそらく情報工学科の学部で扱うであろう内容をまとめた本</description></item><item><title>My First Post</title><link>https://naoyafurudono.github.io/posts/2022/march/my-first-post/</link><pubDate>Wed, 23 Mar 2022 11:41:44 +0900</pubDate><guid>https://naoyafurudono.github.io/posts/2022/march/my-first-post/</guid><description>Hello, Hugo and GitHub Pages このサイトはHugoとGitHub Pagesを用いて運用しています。 Hugo on GitHub GitHub Actionを用いたHugoの運用方法を解説しているド</description></item></channel></rss>