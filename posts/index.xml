<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Furudono's blog</title><link>https://blog.nfurudono.com/posts/</link><description>Recent content in Posts on Furudono's blog</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>&amp;copy;{currentYear} Naoya Furudono</copyright><lastBuildDate>Thu, 16 Mar 2023 11:50:52 +0900</lastBuildDate><atom:link href="https://blog.nfurudono.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>使い勝手の良いデスクトップ向けウィンドウマネージャが欲しい</title><link>https://blog.nfurudono.com/posts/window-manager/</link><pubDate>Thu, 16 Mar 2023 11:50:52 +0900</pubDate><guid>https://blog.nfurudono.com/posts/window-manager/</guid><description>使い勝手のよいウィンドウマネージャがWindowsとかMacに搭載されることはないだろう。 使うアプリケーションやブラウザ、入力デバイスやその</description></item><item><title>エフェクトハンドラの良さと実用性について</title><link>https://blog.nfurudono.com/posts/effect-handlers-without-continuation/</link><pubDate>Thu, 16 Mar 2023 10:57:18 +0900</pubDate><guid>https://blog.nfurudono.com/posts/effect-handlers-without-continuation/</guid><description>エフェクトハンドラで継続や代数的エフェクトを扱う必要性は一ミリもなくて、 実用的にそれらが欲しくなることはないか、 あるいは限られていてそこまで</description></item><item><title>Google Cloudの認証を必要とするアプリケーション開発について</title><link>https://blog.nfurudono.com/posts/gcp-cred/</link><pubDate>Tue, 14 Mar 2023 19:19:56 +0900</pubDate><guid>https://blog.nfurudono.com/posts/gcp-cred/</guid><description>Google Cloudの認証・認可はきめ細かくちゃんとしている感じがして、扱うのが難しいと感じていた。 少し調べたらApplication Default Credentials with client lib</description></item><item><title>Linux (gnome) でよくやる設定</title><link>https://blog.nfurudono.com/posts/linux-keys/</link><pubDate>Tue, 28 Feb 2023 01:59:56 +0900</pubDate><guid>https://blog.nfurudono.com/posts/linux-keys/</guid><description>GNOMEというかLinuxというかでよくやる設定を列挙する。 キーボード系が多いと思う。 gnome-terminal でctrl-(shift-)?tabを有効にする 以</description></item><item><title>軽いドキュメントを印刷するためのツールが欲しい</title><link>https://blog.nfurudono.com/posts/print-docs/</link><pubDate>Fri, 24 Feb 2023 17:48:57 +0900</pubDate><guid>https://blog.nfurudono.com/posts/print-docs/</guid><description>さくっと書いた文書を印刷したいことがある。 ビジネスライクな手紙とか、その日のTODOリストなんかがそうだ。 LaTeXやMadokoを使うのは</description></item><item><title>PCの構成メモ</title><link>https://blog.nfurudono.com/posts/my-pc/</link><pubDate>Thu, 23 Feb 2023 14:22:44 +0900</pubDate><guid>https://blog.nfurudono.com/posts/my-pc/</guid><description>PCを自作して使っているのだけど、どんなパーツを使ったか忘れて後でなにか買い足すときに互換性があるかわからなくてこまる。 今回調査してメモして</description></item><item><title>HugoでタグをつけるためのTips</title><link>https://blog.nfurudono.com/posts/tips-for-tagging/</link><pubDate>Thu, 16 Feb 2023 16:34:49 +0900</pubDate><guid>https://blog.nfurudono.com/posts/tips-for-tagging/</guid><description>車輪の再発明ではあるだろうけどメモしておく。 archetypes/にhugo newで生成する.mdファイルのテンプレを置くことができる。 そこ</description></item><item><title>好きなPL本</title><link>https://blog.nfurudono.com/posts/fav-pl-article/</link><pubDate>Thu, 16 Feb 2023 02:08:43 +0900</pubDate><guid>https://blog.nfurudono.com/posts/fav-pl-article/</guid><description>プログラミング言語を勉強するとイディオムとかその言語界隈でのベストプラクティスが学べて良い、 みたいなことが巷でよく言われる。確かにそれはその</description></item><item><title>Pythonのジェネレータをyieldで書く例</title><link>https://blog.nfurudono.com/posts/python-generator/</link><pubDate>Fri, 06 Jan 2023 17:47:42 +0900</pubDate><guid>https://blog.nfurudono.com/posts/python-generator/</guid><description>Pythonのジェネレータ（というよりyield）の挙動を示す例を書いた。 二分木を作るgenと、ノードを探索してその内容を表す文字列を返すジ</description></item><item><title>2023年にやりたいこと</title><link>https://blog.nfurudono.com/posts/2023-todo/</link><pubDate>Thu, 29 Dec 2022 15:27:02 +0900</pubDate><guid>https://blog.nfurudono.com/posts/2023-todo/</guid><description>来年の抱負じゃないけど、一息ついたタイミングでやりたいことを整理しておくとどこかのタイミングで役に立つかもしれない。 今年のまとめ 今年は人生で</description></item><item><title>git grep で検索して置換</title><link>https://blog.nfurudono.com/posts/replace-with-git-grep/</link><pubDate>Sun, 18 Dec 2022 23:20:30 +0900</pubDate><guid>https://blog.nfurudono.com/posts/replace-with-git-grep/</guid><description>git grepは便利なのだが、置換の機能がない。 ぐぐるとsedと組み合わせて置換する方法がたくさんでてくる。 スクリプトファイルに書き込んだのでメ</description></item><item><title>読書メモ: Go言語による並行処理</title><link>https://blog.nfurudono.com/posts/memo-concurrency-in-go/</link><pubDate>Fri, 25 Nov 2022 15:05:49 +0900</pubDate><guid>https://blog.nfurudono.com/posts/memo-concurrency-in-go/</guid><description>ちゃんと読もうと思ったときのための自分向けのメモ。 プログラミング技法を学びたいなら3,4章 Golangの復習をしたいなら3章 Golangのラ</description></item><item><title>Hugoでページネーションを無効化</title><link>https://blog.nfurudono.com/posts/disable-hugo-pagenation/</link><pubDate>Thu, 24 Nov 2022 15:55:03 +0900</pubDate><guid>https://blog.nfurudono.com/posts/disable-hugo-pagenation/</guid><description>このコミット でトップページのページネーションを無効化した。 やったことは以下の通り。 .Pagenatorを使わないようにする 対象のポストを全件</description></item><item><title>Church Encoded List in JS</title><link>https://blog.nfurudono.com/posts/church-encoded-list-in-js/</link><pubDate>Fri, 28 Oct 2022 18:21:12 +0900</pubDate><guid>https://blog.nfurudono.com/posts/church-encoded-list-in-js/</guid><description>Charch encodingで書いたリストの動くものがほしかったので書き下した。 isnilを実現するためにコンスをisnil、car、cdrからなるペ</description></item><item><title>Mozc のデフォルトエンジンを設定する方法 2022 Oct</title><link>https://blog.nfurudono.com/posts/mozc-default-engine/</link><pubDate>Fri, 28 Oct 2022 17:24:06 +0900</pubDate><guid>https://blog.nfurudono.com/posts/mozc-default-engine/</guid><description>設定ファイルを書き換えるとmozcのデフォルトを日本語入力にできる。 Ubuntu22.10でしか試していないことに注意。 $ cat ~/.config/mozc/ibus_config.textproto engines { name : &amp;quot;mozc-jp&amp;quot; longname :</description></item><item><title>aptのドキュメント整理</title><link>https://blog.nfurudono.com/posts/learn-apt/</link><pubDate>Sat, 22 Oct 2022 00:51:48 +0900</pubDate><guid>https://blog.nfurudono.com/posts/learn-apt/</guid><description>雰囲気でaptを使っていて、リポジトリ周りの扱いに困ることがある。 この手のツールは一生使うだろうから勉強して損はないだろう。 この記事には読ん</description></item><item><title>エフェクトハンドラと依存性注入の関係について調べる （文献調査）</title><link>https://blog.nfurudono.com/posts/effect-handlers-dependency-injection/</link><pubDate>Fri, 14 Oct 2022 01:59:31 +0900</pubDate><guid>https://blog.nfurudono.com/posts/effect-handlers-dependency-injection/</guid><description>僕はエフェクトハンドラについてそれなりに理解していると思う。 一方で依存性注入についてはふわっとしか知らない。 そんな状態ではあるけれど、 エフェ</description></item><item><title>Linuxコマンドがわからない学部生について</title><link>https://blog.nfurudono.com/posts/ta-command/</link><pubDate>Wed, 12 Oct 2022 23:50:43 +0900</pubDate><guid>https://blog.nfurudono.com/posts/ta-command/</guid><description>学部生や教育を非難したり愚痴を言ったりするつもりはない。 情報系の学部2年生向けのプログラミングの講義でTAをやっている。 Linuxコマンド（</description></item><item><title>格安の引越し業者が良かった</title><link>https://blog.nfurudono.com/posts/moving/</link><pubDate>Wed, 12 Oct 2022 23:17:55 +0900</pubDate><guid>https://blog.nfurudono.com/posts/moving/</guid><description>今日引越しをした。 1年半くらい住んだ家から学校の近くへ引越した。 動機は学校がオフラインになったから。告知から実行までが短くて困った。 2週間後</description></item><item><title>Wishlist</title><link>https://blog.nfurudono.com/posts/wishlist/</link><pubDate>Fri, 30 Sep 2022 16:56:23 +0900</pubDate><guid>https://blog.nfurudono.com/posts/wishlist/</guid><description>欲しい / つくりたいソフトウェアのリスト。 随時更新していく。 マークダウンフォーマッタ 全角文字にうまく対応したり、Madokoのシンタックスを理</description></item><item><title>Syncthingがよさげ</title><link>https://blog.nfurudono.com/posts/syncthing/</link><pubDate>Wed, 28 Sep 2022 16:25:18 +0900</pubDate><guid>https://blog.nfurudono.com/posts/syncthing/</guid><description>オープンソースのソフトウェアでSyncthing というものを知った。 LAN内のデバイスとはLAN内で、インターネットの先にいるデバイスとはイ</description></item><item><title>落し蓋</title><link>https://blog.nfurudono.com/posts/otoshibuta/</link><pubDate>Mon, 19 Sep 2022 22:30:13 +0900</pubDate><guid>https://blog.nfurudono.com/posts/otoshibuta/</guid><description>ひじきの煮物をつくったのだけど、あまり上手にできなかった。 その原因をさぐりたい。 まず、ひじきの量に対して他の具材を入れすぎた。ひじきが主役っ</description></item><item><title>「桜井政博のゲーム作るには」がおもしろい</title><link>https://blog.nfurudono.com/posts/sakurai-youtube-channel/</link><pubDate>Sun, 11 Sep 2022 20:31:45 +0900</pubDate><guid>https://blog.nfurudono.com/posts/sakurai-youtube-channel/</guid><description>桜井政博のゲーム作るには というYouTubeチャンネルが面白い。 ゲームの仕組みに関する知識を説明してくれる。動画のクオリティがすごいし、何よ</description></item><item><title>Daily Note: 腕時計の電池交換</title><link>https://blog.nfurudono.com/posts/daily-note-watch-battery/</link><pubDate>Sun, 11 Sep 2022 19:38:11 +0900</pubDate><guid>https://blog.nfurudono.com/posts/daily-note-watch-battery/</guid><description>コロナが流行ってから外出する機会が減りそれにともない腕時計をつけることも減った。 今度腕時計が必要な用事があるのだけど、電池が切れていたので交</description></item><item><title>Ubuntu22でスクリーンショットの保存先を変える方法</title><link>https://blog.nfurudono.com/posts/ubuntu-screenshot/</link><pubDate>Sun, 11 Sep 2022 19:09:03 +0900</pubDate><guid>https://blog.nfurudono.com/posts/ubuntu-screenshot/</guid><description>Ubuntu22でデフォルトのスクリーンショットアプリはおしゃれな見た目をしていてかっこいいのだが、保存先を変える設定が見当たらなくて困って</description></item><item><title>Todo Appを作っている話</title><link>https://blog.nfurudono.com/posts/todo-app/</link><pubDate>Tue, 23 Aug 2022 16:34:04 +0900</pubDate><guid>https://blog.nfurudono.com/posts/todo-app/</guid><description>この記事は書きかけです。 Todoアプリを作っている。就活の際に Webアプリの開発経験に関する話をするときの題材が欲しかったから。 GitHub: https://github.com/naoyafurudono/todo-app モチベー</description></item><item><title>Python のfilter関数が良い</title><link>https://blog.nfurudono.com/posts/python-filter/</link><pubDate>Fri, 19 Aug 2022 17:32:37 +0900</pubDate><guid>https://blog.nfurudono.com/posts/python-filter/</guid><description>ドキュメント を読むのが早い。 こういうことができる。 $ cat map-none.py 17:34 def f(x): if x &amp;lt; 0: return x for i in filter(f, map(lambda a: a-10, range(100) ) ): print(i) $ python3 map-none.py 17:34 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 静的型つき言語で</description></item><item><title>Reactのしくみを学ぶ</title><link>https://blog.nfurudono.com/posts/learn-react/</link><pubDate>Wed, 10 Aug 2022 18:04:22 +0900</pubDate><guid>https://blog.nfurudono.com/posts/learn-react/</guid><description>この記事は僕の勉強メモです。資料へのポインタが主なコンテンツになるかと思います。 更新は随時入るでしょうし、煩わしいので追記した旨も基本的には</description></item><item><title>救急でのITシステムについて</title><link>https://blog.nfurudono.com/posts/kyukyu/</link><pubDate>Mon, 01 Aug 2022 19:25:29 +0900</pubDate><guid>https://blog.nfurudono.com/posts/kyukyu/</guid><description>全然詳しくないのだけれど、救急で受け入れ先の病院が見つからない問題は改善する見込みはあるのだろうか。 きっと受け入れのプロトコルやデータの管理</description></item><item><title>円周率とユークリッド空間</title><link>https://blog.nfurudono.com/posts/pi/</link><pubDate>Mon, 01 Aug 2022 17:41:02 +0900</pubDate><guid>https://blog.nfurudono.com/posts/pi/</guid><description>タイトルがこの記事の主なコンテンツなのだが、円周率はユークリッド空間に対して定まる量なのだろう、という推測と同じことを主張しているサイトの紹</description></item><item><title>Local File Transfer</title><link>https://blog.nfurudono.com/posts/local-file-transfer/</link><pubDate>Thu, 14 Jul 2022 14:02:57 +0900</pubDate><guid>https://blog.nfurudono.com/posts/local-file-transfer/</guid><description>近距離でのファイル交換はあまり洗練されていない印象がある。 Apple製品間ではAirdropが使えるし、Windowsにも似たような機能があ</description></item><item><title>REPLと単体テスト</title><link>https://blog.nfurudono.com/posts/repl-unit/</link><pubDate>Mon, 11 Jul 2022 19:23:21 +0900</pubDate><guid>https://blog.nfurudono.com/posts/repl-unit/</guid><description>Pythonのことを考えていて、TDDの文脈での単体テストの意義にふと気がついた。 つまり、失敗するテストを先に書いて、それを通るように実装を</description></item><item><title>UNIXでのパーミッション周りでの振る舞いを調べた</title><link>https://blog.nfurudono.com/posts/syscall/</link><pubDate>Fri, 08 Jul 2022 18:15:10 +0900</pubDate><guid>https://blog.nfurudono.com/posts/syscall/</guid><description>systemcallを初めて書いた。 パーミッションの挙動を調べるのがモチベーション。 以下を実行できてほしかったのだが、sudoにそんなファイ</description></item><item><title>Systemd</title><link>https://blog.nfurudono.com/posts/systemd/</link><pubDate>Fri, 08 Jul 2022 18:13:10 +0900</pubDate><guid>https://blog.nfurudono.com/posts/systemd/</guid><description>systemdでxremapを追加して、システム起動時に勝手にxremapが走るようにした。 僕の環境: $ lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 22.04 LTS Release: 22.04 Codename: jammy</description></item><item><title>Spotify at Commit</title><link>https://blog.nfurudono.com/posts/spotify-at-commit/</link><pubDate>Mon, 04 Jul 2022 13:39:57 +0900</pubDate><guid>https://blog.nfurudono.com/posts/spotify-at-commit/</guid><description>Spotifyの再生が一瞬途切れることがある。 そしてそれがシェルコマンドを叩いたタイミングと重なる。 どんなカラクリなんだろうか。ただの気のせ</description></item><item><title>Shell Commands</title><link>https://blog.nfurudono.com/posts/shell-commands/</link><pubDate>Mon, 04 Jul 2022 13:31:01 +0900</pubDate><guid>https://blog.nfurudono.com/posts/shell-commands/</guid><description>パーミッションのことが気になって、シェルコマンドのソースコード（C言語）を読んでいるのだけど、読んでいて楽しい。 rm から読み始めたのだが errorno やコ</description></item><item><title>競技プログラミング</title><link>https://blog.nfurudono.com/posts/procon/</link><pubDate>Sun, 03 Jul 2022 01:41:50 +0900</pubDate><guid>https://blog.nfurudono.com/posts/procon/</guid><description>数ヶ月前からときどきAtCoder (my account) のコンテストに参加している。 就活とか関数型ではない言語でのプログラミングを意識して始めた。 今回のABC</description></item><item><title>Phantom Type</title><link>https://blog.nfurudono.com/posts/phantom-type/</link><pubDate>Wed, 29 Jun 2022 14:01:56 +0900</pubDate><guid>https://blog.nfurudono.com/posts/phantom-type/</guid><description>Phantom type (幽霊型) をチラッと学んだのでメモ。 きっかけは Gentrification gone too far? affordable 2nd-class values for fun and (co-)effect を読んでいるときに出てきたこと。 静的な型を持つ言語で使うテクニックで</description></item><item><title>コードブロックの表示</title><link>https://blog.nfurudono.com/posts/blog-code/</link><pubDate>Tue, 28 Jun 2022 19:34:08 +0900</pubDate><guid>https://blog.nfurudono.com/posts/blog-code/</guid><description>コードブロックの表示が気に入らない。設定をいじって白地にしたい。現状では黒地。 というのは、ブログの背景が白だし、僕が普段白地になれているから</description></item><item><title>Golang の変数キャプチャ</title><link>https://blog.nfurudono.com/posts/go-learn-memory-motivation/</link><pubDate>Tue, 28 Jun 2022 17:27:34 +0900</pubDate><guid>https://blog.nfurudono.com/posts/go-learn-memory-motivation/</guid><description>Golangの変数キャプチャを勉強する。 追記: 最初、変数キャプチャではなくメモリモデルを勉強しようとしていた。勉強してみて、求めている概念で</description></item><item><title>JavaScript The Good Partsを読んだ</title><link>https://blog.nfurudono.com/posts/js-good-parts/</link><pubDate>Mon, 20 Jun 2022 19:55:28 +0900</pubDate><guid>https://blog.nfurudono.com/posts/js-good-parts/</guid><description>読んだ。きっかけはTypeScriptの関数型言語好き向けの紹介ページで事前知識として要求されていたから。 読んでよかったと思う。しっかりJS</description></item><item><title>趣味</title><link>https://blog.nfurudono.com/posts/anime/</link><pubDate>Mon, 20 Jun 2022 00:53:27 +0900</pubDate><guid>https://blog.nfurudono.com/posts/anime/</guid><description>心に残った作品を列挙しておく。 順序に意図は無い。 アニメ 91Days パリピ孔明 spy familyのエンディング（アニメ？） true tears 天元突破グレンラガン マクロスデ</description></item><item><title>Golangでのlog</title><link>https://blog.nfurudono.com/posts/go-log/</link><pubDate>Sun, 19 Jun 2022 18:30:06 +0900</pubDate><guid>https://blog.nfurudono.com/posts/go-log/</guid><description>Golangの標準ライブラリにlogがある。いろいろ関数が提供されているが、機能はざっくりいうと「引数で与えたメッセージにタイムスタンプをつ</description></item><item><title>投票所のシステム</title><link>https://blog.nfurudono.com/posts/vote/</link><pubDate>Sun, 19 Jun 2022 17:54:21 +0900</pubDate><guid>https://blog.nfurudono.com/posts/vote/</guid><description>選挙に行ってきた。そこで投票用紙を一枚差し出す機械を見て驚いた。 あの機械が何をやっているのかは定かではないが、おそらく正確に１枚だけ投票用紙</description></item><item><title>Go Context</title><link>https://blog.nfurudono.com/posts/go-context/</link><pubDate>Sat, 18 Jun 2022 17:35:11 +0900</pubDate><guid>https://blog.nfurudono.com/posts/go-context/</guid><description>Golangで始めてcontextを使った。リポジトリは非公開なのであしからず。 Webスクレイピングツールを作っている。 ランディングページを</description></item><item><title>UbuntuでIpv6を無効化する</title><link>https://blog.nfurudono.com/posts/disable-ipv6-ubuntu/</link><pubDate>Fri, 17 Jun 2022 19:13:53 +0900</pubDate><guid>https://blog.nfurudono.com/posts/disable-ipv6-ubuntu/</guid><description>学内ネットにVPN接続してIEEEの論文を取得しようとしたが、学内からのアクセスだと認識されなかった。 IPv6を無効化するとうまくいった。 M</description></item><item><title>Ubuntu22.04でZoomの画面共有がうまくいかなかった件</title><link>https://blog.nfurudono.com/posts/zoom-ubuntu/</link><pubDate>Wed, 15 Jun 2022 17:36:50 +0900</pubDate><guid>https://blog.nfurudono.com/posts/zoom-ubuntu/</guid><description>追記: 先日画面共有しようとしたところ、うまく相手に表示されなかった。 Zoomから退出して、Ubuntuにログインし直し、ウィンドウシステムを</description></item><item><title>NeoVimでクリップボードを使う</title><link>https://blog.nfurudono.com/posts/nvim-clipboard/</link><pubDate>Sun, 12 Jun 2022 11:01:45 +0900</pubDate><guid>https://blog.nfurudono.com/posts/nvim-clipboard/</guid><description>NeoVim でクリップボードを使う TL;DR; init.vimにset clipboard+=unnamedplusと追記する。 長めの説明 Nvim では（vi や vim も）ヤン</description></item><item><title>Begin Rust</title><link>https://blog.nfurudono.com/posts/begin-rust/</link><pubDate>Sat, 11 Jun 2022 12:12:24 +0900</pubDate><guid>https://blog.nfurudono.com/posts/begin-rust/</guid><description>Rustを勉強している。やはりライフタイムとか借用のあたりで苦労している。 所有権やライフタイムはわかるのだが、借用の仕組みがイマイチわからな</description></item><item><title>Favicon</title><link>https://blog.nfurudono.com/posts/favicon/</link><pubDate>Mon, 30 May 2022 03:06:08 +0900</pubDate><guid>https://blog.nfurudono.com/posts/favicon/</guid><description>ファビコンをつけてみた。 素材はJDENTICONで生成した。 それをもとにfavicon用のファイルをFavicon.ico &amp;amp; App Icon Genera</description></item><item><title>ブログの設定を変えた</title><link>https://blog.nfurudono.com/posts/2022/blog-theme/</link><pubDate>Mon, 30 May 2022 02:08:10 +0900</pubDate><guid>https://blog.nfurudono.com/posts/2022/blog-theme/</guid><description>このブログはGitHub Pagesで公開していて、Hugoを用いて生成している。 Hugoの設定をろくに調べずに雑に書いていたのだが、今回少し</description></item><item><title>NeoVimを使い始めた</title><link>https://blog.nfurudono.com/posts/2022/april/neovim/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/posts/2022/april/neovim/</guid><description>Neo Vimが使っていて楽しい、という話。普段はVSCodeを使っていて、全然移行したわけでもないのだけれど、NVimは文字入力に対する反応が比</description></item><item><title>構文エディタ実装の考え</title><link>https://blog.nfurudono.com/posts/2022/april/syntacticalz-editor/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/posts/2022/april/syntacticalz-editor/</guid><description>構文エディタとは、文字単位だけでなく抽象構文木単位での編集ができるエディタのこと。 一般のコードでなく、プログラムを編集することは抽象構文木の</description></item><item><title>読書感想: 入門 コンピュータ科学</title><link>https://blog.nfurudono.com/posts/2022/march/intro-cs/</link><pubDate>Sat, 26 Mar 2022 11:12:44 +0900</pubDate><guid>https://blog.nfurudono.com/posts/2022/march/intro-cs/</guid><description>本をざっくり読んだので感想をメモ。読んでよかった。 読んだ本: 入門 コンピュータ科学。 感想 おそらく情報工学科の学部で扱うであろう内容をまとめた本</description></item><item><title>My First Post</title><link>https://blog.nfurudono.com/posts/2022/march/my-first-post/</link><pubDate>Wed, 23 Mar 2022 11:41:44 +0900</pubDate><guid>https://blog.nfurudono.com/posts/2022/march/my-first-post/</guid><description>Hello, Hugo and GitHub Pages このサイトはHugoとGitHub Pagesを用いて運用しています。 これらとGitHub Actionを組み合わせることで、マークダ</description></item></channel></rss>