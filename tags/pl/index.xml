<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PL on ツイートするには長すぎる</title><link>https://blog.nfurudono.com/tags/pl/</link><description>Recent content in PL on ツイートするには長すぎる</description><generator>Hugo</generator><language>ja</language><copyright>&amp;copy;{currentYear} Naoya Furudono</copyright><lastBuildDate>Sat, 08 Jun 2024 19:37:20 +0900</lastBuildDate><atom:link href="https://blog.nfurudono.com/tags/pl/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Conference 2024に参加した</title><link>https://blog.nfurudono.com/posts/gocon2024/</link><pubDate>Sat, 08 Jun 2024 15:14:03 +0900</pubDate><guid>https://blog.nfurudono.com/posts/gocon2024/</guid><description>参加セッション Openingから全ての時間帯で参加した。参加セッションは以下の通り。 イテレータによってGoはどう変わるのか 最近入ったイテレー</description></item><item><title>ElmアーキテクチャをReactで実現する話</title><link>https://blog.nfurudono.com/posts/elm-architecture/</link><pubDate>Thu, 18 Apr 2024 00:58:18 +0900</pubDate><guid>https://blog.nfurudono.com/posts/elm-architecture/</guid><description>Elmアーキテクチャ リアクティブプログラミングの勉強をしていた頃にElm言語を知って好きになった（全然コード書いてないけど）。特徴はElmア</description></item><item><title>2024-02-17</title><link>https://blog.nfurudono.com/daily/2024-02-17/</link><pubDate>Sat, 17 Feb 2024 17:55:29 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2024-02-17/</guid><description>glangにgeneraterを入れようというプロポーザルがあって、試験的に実装されているみたい。いくつかのパターンがあるけど、だいたいこん</description></item><item><title>2024-02-13</title><link>https://blog.nfurudono.com/daily/2024-02-13/</link><pubDate>Tue, 13 Feb 2024 18:16:15 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2024-02-13/</guid><description>今日1on1で教えてもらった。ロールモデルとして追っていく。https://scrapbox.io/kawasima/%E3%82%A4%E</description></item><item><title>2023-12-26</title><link>https://blog.nfurudono.com/daily/2023-12-26/</link><pubDate>Tue, 26 Dec 2023 20:15:27 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-12-26/</guid><description>メモ ついったで同僚が panicIndex と言っていて、なんだそれと思ったので調べた。golangの文脈だったので想像はある程度ついて、golangのランタイム</description></item><item><title>推し言語機能 Racket編</title><link>https://blog.nfurudono.com/posts/fav-racket-features/</link><pubDate>Tue, 19 Dec 2023 22:33:05 +0900</pubDate><guid>https://blog.nfurudono.com/posts/fav-racket-features/</guid><description>この記事はGMOペパボエンジニア Advent Calendar 2023 🎅会場の19日の記事です！ 昨日はyagijinさんのReactやってる人向けのSwiftUI入門でした</description></item><item><title>2023-09-12</title><link>https://blog.nfurudono.com/daily/2023-09-12/</link><pubDate>Tue, 12 Sep 2023 01:20:35 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-09-12/</guid><description>rust難しい 以下のあたりを完全に理解したらだいぶ楽になる気がする。 エラー処理 イテレータ 借用とcopy エラー処理やイテレータの周りはrust</description></item><item><title>契約と型検査</title><link>https://blog.nfurudono.com/posts/contract-programming/</link><pubDate>Thu, 31 Aug 2023 21:49:38 +0900</pubDate><guid>https://blog.nfurudono.com/posts/contract-programming/</guid><description>プログラミングの型検査・契約・テストについて書きます。お酒を飲みながら書きました。注意は払ったつもりですが、変なところがあるかもしれません。</description></item><item><title>2023-07-22</title><link>https://blog.nfurudono.com/daily/2023-07-22/</link><pubDate>Sat, 22 Jul 2023 11:56:59 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-07-22/</guid><description>ふにゃっとしてる コンパイラの実装で、次はポインタ算術をやる。演算子がオーバーローディングされているので型検査が必要。今は環境とかのデータ構造</description></item><item><title>2023-07-21</title><link>https://blog.nfurudono.com/daily/2023-07-21/</link><pubDate>Fri, 21 Jul 2023 23:18:37 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-07-21/</guid><description>自作Cコンパイラの進捗 https://github.com/naoyafurudono/comp 早いもので作り始めてから2週間たったみたい。もっとサクサク進むと思っていたのだけど、しばらく楽しめそう。 自作Cコンパ</description></item><item><title>2023-07-19</title><link>https://blog.nfurudono.com/daily/2023-07-19/</link><pubDate>Wed, 19 Jul 2023 23:34:45 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-07-19/</guid><description>実装しているCコンパイラ で関数定義をできるようになった🎉。今までも既存のコンパイラで作ったオブジェクトファイルとリンクすれば呼び出すことはで</description></item><item><title>2023-07-17</title><link>https://blog.nfurudono.com/daily/2023-07-17/</link><pubDate>Mon, 17 Jul 2023 18:47:03 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-07-17/</guid><description>Cコンパイラをarm macで実装しているのだけど、a=b=0; return b;&amp;quot;みたいなコードがセグメント違反で落ちる。 lldbで調べてみる</description></item><item><title>arm64のメモ</title><link>https://blog.nfurudono.com/posts/arm64/</link><pubDate>Sat, 15 Jul 2023 16:17:21 +0900</pubDate><guid>https://blog.nfurudono.com/posts/arm64/</guid><description>Cコンパイラを実装するためにarm64のことを調べている。この記事はそのメモ。 公式ドキュメント よくあるソフトウェアのライブラリについているド</description></item><item><title>2023-07-08</title><link>https://blog.nfurudono.com/daily/2023-07-08/</link><pubDate>Sat, 08 Jul 2023 12:39:28 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-07-08/</guid><description>ノートパソコンの恩恵 椅子に座るほどの元気がなくてもパソコン座れるので楽しい。気軽にコーディングできる。 Cコンパイラの途中経過 cコンパイラ実装</description></item><item><title>2023-07-05</title><link>https://blog.nfurudono.com/daily/2023-07-05/</link><pubDate>Wed, 05 Jul 2023 22:19:47 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-07-05/</guid><description>論理と哲学とプログラミング言語 プロトタイプベースのオブジェクト指向言語について、哲学の方面から議論したエッセイを読んだ。クラスベースなのは古</description></item><item><title>2023-06-29</title><link>https://blog.nfurudono.com/daily/2023-06-29/</link><pubDate>Thu, 29 Jun 2023 22:02:44 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-06-29/</guid><description>crate.ioデビュー crate.ioに初めてコードを登録した。cargo install で入るから便利。ちょっとしたCLIツール書く体験がなかなか良い</description></item><item><title>2023-06-24</title><link>https://blog.nfurudono.com/daily/2023-06-24/</link><pubDate>Sat, 24 Jun 2023 19:10:24 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-06-24/</guid><description>macのタイムゾーンの設定が狂っていて、今日の投稿がこれと前回の二つに分かれてしまった。 今日はmacの設定と、以降に伴って壊れたちょっとした</description></item><item><title>2023-05-13</title><link>https://blog.nfurudono.com/daily/2023-05-13/</link><pubDate>Sat, 13 May 2023 20:38:25 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-05-13/</guid><description>今日はRustを少し勉強している もともとbashで書いていたスクリプトを拡張したくなって、普段ならPythonで書くところを今日は新しいこと</description></item><item><title>2023-05-02</title><link>https://blog.nfurudono.com/daily/2023-05-02/</link><pubDate>Tue, 02 May 2023 08:44:41 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-05-02/</guid><description>プログラミングパラダイムを並べて観察している DDD周りを最近漁っている。原著はオブジェクト指向で説明されているけど、関数型で説明している本を</description></item><item><title>2023-04-28</title><link>https://blog.nfurudono.com/daily/2023-04-28/</link><pubDate>Fri, 28 Apr 2023 00:34:21 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-04-28/</guid><description>意味論の話 今日は意味論の直感が少し生えたので機嫌がいい。寝て起きたらもう少しまじめに考えよう。 追記 完全に忘れていた。一回捨てた継続渡しスタイ</description></item><item><title>2023-04-02</title><link>https://blog.nfurudono.com/daily/2023-04-02/</link><pubDate>Sun, 02 Apr 2023 15:56:40 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-04-02/</guid><description>CPythonの開発者向けドキュメントがとてもよい。今はコンパイラの構成に関する部分を読んでいる。抽象構文木の扱いやメモリ管理の方針など、コ</description></item><item><title>2023-03-19</title><link>https://blog.nfurudono.com/daily/2023-03-19/</link><pubDate>Sun, 19 Mar 2023 10:46:59 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-03-19/</guid><description>最近AIが流行っていて、精度がすごいと話題で、生活が多かれ少なかれ変わっていくのだろうなという感じがする。ああいう機械学習ベースのAIは学習</description></item><item><title>エフェクトハンドラの良さと実用性について</title><link>https://blog.nfurudono.com/posts/effect-handlers-without-continuation/</link><pubDate>Thu, 16 Mar 2023 10:57:18 +0900</pubDate><guid>https://blog.nfurudono.com/posts/effect-handlers-without-continuation/</guid><description>エフェクトハンドラで継続や代数的エフェクトを扱う必要性は一ミリもなくて、実用的にそれらが欲しくなることはないか、あるいは限られていてそこまで</description></item><item><title>2023-02-26</title><link>https://blog.nfurudono.com/daily/2023-02-26/</link><pubDate>Sun, 26 Feb 2023 03:39:26 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-02-26/</guid><description>Golangをすごく久しぶりに書いた結果、構造体の要素がコピーされることを忘れておりデバッグに時間を溶かした（コピーした構造体のフィールドを</description></item></channel></rss>