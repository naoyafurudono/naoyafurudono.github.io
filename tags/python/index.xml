<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on tweetするには長すぎる</title><link>https://blog.nfurudono.com/tags/python/</link><description>Recent content in python on tweetするには長すぎる</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>&amp;copy;{currentYear} Naoya Furudono</copyright><lastBuildDate>Sat, 13 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nfurudono.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>2023-05-13</title><link>https://blog.nfurudono.com/daily/2023-05-13/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/daily/2023-05-13/</guid><description>今日はRustを少し勉強している もともとbashで書いていたスクリプトを拡張したくなって、 普段ならPythonで書くところを今日は新しいこと</description></item><item><title>2023-04-02</title><link>https://blog.nfurudono.com/daily/2023-04-02/</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/daily/2023-04-02/</guid><description>CPythonの開発者向けドキュメントがとてもよい。今はコンパイラの構成に関する部分を読んでいる。 抽象構文木の扱いやメモリ管理の方針など、コ</description></item><item><title>Pythonのジェネレータをyieldで書く例</title><link>https://blog.nfurudono.com/posts/python-generator/</link><pubDate>Fri, 06 Jan 2023 17:47:42 +0900</pubDate><guid>https://blog.nfurudono.com/posts/python-generator/</guid><description>Pythonのジェネレータ（というよりyield）の挙動を示す例を書いた。 二分木を作るgenと、ノードを探索してその内容を表す文字列を返すジ</description></item><item><title>2023-01-05</title><link>https://blog.nfurudono.com/daily/2023-01-05/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/daily/2023-01-05/</guid><description>年末にPython向けのGoogleのスタイルガイド を読んでからPythonを書くのがとても楽しい。 知らなかった言語機能やその有効な使い方と</description></item><item><title>2022-12-30</title><link>https://blog.nfurudono.com/daily/2022-12-30/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/daily/2022-12-30/</guid><description>スクリプトを真面目に書いた 昔聴いていた音楽を久しぶりに聞きたくなったのだがSpotifyで配信されていなかった。 ローカルにデータがあったので</description></item><item><title>2022-12-28</title><link>https://blog.nfurudono.com/daily/2022-12-28/</link><pubDate>Wed, 28 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/daily/2022-12-28/</guid><description>年末総会 就職先のイベントに参加してきた。 想像以上にたくさんの方に認識していただいていた。 僕が初めて認識した方や、ネットで認識していた方、 面接</description></item><item><title>2022-12-21</title><link>https://blog.nfurudono.com/daily/2022-12-21/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.nfurudono.com/daily/2022-12-21/</guid><description>最近ちいさな言語処理系(検証器)をPythonで実装している。 学校の講義でそういう講義があって、好きに言語を選んでよいということだった。 参加</description></item><item><title>Python のfilter関数が良い</title><link>https://blog.nfurudono.com/posts/python-filter/</link><pubDate>Fri, 19 Aug 2022 17:32:37 +0900</pubDate><guid>https://blog.nfurudono.com/posts/python-filter/</guid><description>ドキュメント を読むのが早い。 こういうことができる。 $ cat map-none.py 17:34 def f(x): if x &amp;lt; 0: return x for i in filter(f, map(lambda a: a-10, range(100) ) ): print(i) $ python3 map-none.py 17:34 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 静的型つき言語で</description></item></channel></rss>