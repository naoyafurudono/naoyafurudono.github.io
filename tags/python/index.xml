<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on ツイートするには長すぎる</title><link>https://blog.nfurudono.com/tags/python/</link><description>Recent content in Python on ツイートするには長すぎる</description><generator>Hugo</generator><language>ja</language><copyright>&amp;copy;{currentYear} Naoya Furudono</copyright><lastBuildDate>Sun, 14 May 2023 00:00:19 +0900</lastBuildDate><atom:link href="https://blog.nfurudono.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>2023-05-13</title><link>https://blog.nfurudono.com/daily/2023-05-13/</link><pubDate>Sat, 13 May 2023 20:38:25 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-05-13/</guid><description>&lt;h2>
&lt;a href="#%e4%bb%8a%e6%97%a5%e3%81%afrust%e3%82%92%e5%b0%91%e3%81%97%e5%8b%89%e5%bc%b7%e3%81%97%e3%81%a6%e3%81%84%e3%82%8b" id="今日はrustを少し勉強している" class="anchor" aria-hidden="true">今日はRustを少し勉強している&lt;/a>
&lt;/h2>
&lt;p>もともと&lt;code>bash&lt;/code>で書いていたスクリプトを拡張したくなって、普段ならPythonで書くところを今日は新しいことをしてみようということでRustをつかってみることにした。&lt;/p></description></item><item><title>2023-04-02</title><link>https://blog.nfurudono.com/daily/2023-04-02/</link><pubDate>Sun, 02 Apr 2023 15:56:40 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-04-02/</guid><description>&lt;!--
仕事でどんな技術に振っていこうか考えている。
自分で制御しきれるものではないだろうけど、
方針を決めるのに主体性を持たないとつまらないだろう。
やはりプログラミング言語は好きでこれからも勉強していきたい。
-->
&lt;p>CPythonの開発者向けドキュメントがとてもよい。今は&lt;a href="https://devguide.python.org/internals/compiler/">コンパイラの構成に関する部分&lt;/a>を読んでいる。抽象構文木の扱いやメモリ管理の方針など、コンパイラ開発の方針を説明している。ドラゴンブックとかからは得られない、開発手法の知識を得られて幸せ。&lt;/p></description></item><item><title>Pythonのジェネレータをyieldで書く例</title><link>https://blog.nfurudono.com/posts/python-generator/</link><pubDate>Fri, 06 Jan 2023 17:47:42 +0900</pubDate><guid>https://blog.nfurudono.com/posts/python-generator/</guid><description>&lt;p>Pythonのジェネレータ（というより&lt;code>yield&lt;/code>）の挙動を示す例を書いた。二分木を作る&lt;code>gen&lt;/code>と、ノードを探索してその内容を表す文字列を返すジェネレータを返す&lt;code>conv&lt;/code>を定義した。&lt;code>conv&lt;/code>がこういう風に定義できることを例で確認したかった。&lt;/p></description></item><item><title>2023-01-05</title><link>https://blog.nfurudono.com/daily/2023-01-05/</link><pubDate>Thu, 05 Jan 2023 13:51:03 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2023-01-05/</guid><description>&lt;p>年末に&lt;a href="https://google.github.io/styleguide/pyguide.html">Python向けのGoogleのスタイルガイド&lt;/a>
を読んでからPythonを書くのがとても楽しい。知らなかった言語機能やその有効な使い方とその理由をコンパクトに説明してくれる。言語機能の使い方は補足程度で、機能そのものは知っていたりググって理解することを読者に期待していそう。言語に入門したあと、息を吸うようにかけるようになるまでの間を埋めるのに役立ちそう。&lt;/p></description></item><item><title>2022-12-30</title><link>https://blog.nfurudono.com/daily/2022-12-30/</link><pubDate>Fri, 30 Dec 2022 20:37:17 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2022-12-30/</guid><description>&lt;h2>
&lt;a href="#%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%82%92%e7%9c%9f%e9%9d%a2%e7%9b%ae%e3%81%ab%e6%9b%b8%e3%81%84%e3%81%9f" id="スクリプトを真面目に書いた" class="anchor" aria-hidden="true">スクリプトを真面目に書いた&lt;/a>
&lt;/h2>
&lt;p>昔聴いていた音楽を久しぶりに聞きたくなったのだがSpotifyで配信されていなかった。ローカルにデータがあったのでそこからSpotifyかVLCとかで使えるようにしようと思ったのだが、ローカルデータのファイルフォーマットが変だったりディレクトリ構成がイマイチで体験が良くない。&lt;/p></description></item><item><title>2022-12-28</title><link>https://blog.nfurudono.com/daily/2022-12-28/</link><pubDate>Wed, 28 Dec 2022 19:35:00 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2022-12-28/</guid><description>&lt;h2>
&lt;a href="#%e5%b9%b4%e6%9c%ab%e7%b7%8f%e4%bc%9a" id="年末総会" class="anchor" aria-hidden="true">年末総会&lt;/a>
&lt;/h2>
&lt;p>就職先のイベントに参加してきた。想像以上にたくさんの方に認識していただいていた。僕が初めて認識した方や、ネットで認識していた方、面接などでお世話になった方から、たくさんお話をうかがえて楽しい時間だった。みなさん、ありがとうございました。&lt;/p></description></item><item><title>2022-12-21</title><link>https://blog.nfurudono.com/daily/2022-12-21/</link><pubDate>Wed, 21 Dec 2022 20:44:28 +0900</pubDate><guid>https://blog.nfurudono.com/daily/2022-12-21/</guid><description>&lt;p>最近ちいさな言語処理系(検証器)をPythonで実装している。学校の講義でそういう講義があって、好きに言語を選んでよいということだった。参加者の間で関数型言語がメジャーな感じではなかったのこともあり、怖いもの見たさでPythonを選んでみた。ちなみに今回の実装は性能を問題にしておらず、動くことが大切。&lt;/p></description></item><item><title>Python のfilter関数が良い</title><link>https://blog.nfurudono.com/posts/python-filter/</link><pubDate>Fri, 19 Aug 2022 17:32:37 +0900</pubDate><guid>https://blog.nfurudono.com/posts/python-filter/</guid><description>&lt;p>&lt;a href="https://docs.python.org/ja/3/library/functions.html#filter">ドキュメント&lt;/a> を読むのが早い。&lt;/p></description></item></channel></rss>